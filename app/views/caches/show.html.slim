h1 Elasticache Memcached Auto-Discovery Prototype

h2 Servers
ul
  - for server in @servers do
    li =server

= link_to 'Refresh Elasticache Client View of Cluster', refresh_cache_path, method: :put

h2 Cache Store Servers
ul
  - for server in @cache_store_servers do
    li =server

= link_to 'Update Cache Store View of Cluster', refresh_cache_store_cache_path, method: :put

h2 Cache Keys
= @cache_count

p

= link_to 'Clear Cache', cache_path, method: :delete

p

= form_tag cache_path
  = submit_tag 'Write 1000 keys'

p

= link_to 'Check Cache', check_cache_path

- if @misses.present?
  h2 Cache Misses
  = @misses
- if @hits.present?
  h2 Cache Hits
  = @hits

h2 SQS Queues
ul
  - for queue in @queues do
    li =queue

h3 Messages
ul
  - for message in @messages.messages do
    - json = JSON.parse(message.body)
    li =json["Message"]

= link_to 'Purge Queue', purge_sqs_queue_path, method: :delete
